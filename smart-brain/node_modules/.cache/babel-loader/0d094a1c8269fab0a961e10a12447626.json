{"ast":null,"code":"var _jsxFileName = \"E:\\\\The Complete web developer zero to mastery\\\\Smart-Brain\\\\smart-brain\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport Rank from './components/Rank/Rank';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Particles from 'react-particles-js';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Clarifai from 'clarifai';\nimport './App.css';\nconst particlesOptions = {\n  \"particles\": {\n    \"number\": {\n      \"value\": 100,\n      \"density\": {\n        \"enable\": false\n      }\n    },\n    \"size\": {\n      \"value\": 4\n    }\n  },\n  \"interactivity\": {\n    \"events\": {\n      \"onhover\": {\n        \"enable\": true,\n        \"mode\": \"bubble repulse\"\n      }\n    },\n    \"modes\": {\n      \"bubble\": {\n        \"size\": 6,\n        \"distance\": 40\n      }\n    }\n  }\n};\nconst app = new Clarifai.App({\n  apiKey: 'a5731e15cb6349c2b12b4ddf400a7a2a'\n});\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.onChangeInput = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputImage');\n      const width = image.width;\n      const height = image.height;\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.onSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict({\n        id: Clarifai.FACE_DETECT_MODEL,\n        version: ''\n      }, this.state.input).then( //console.log(\n      function (response) {}, function (err) {// there was an error\n      });\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {}\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Navigation, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(Logo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(Rank, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(ImageLinkForm, {\n      onChangeInput: this.onChangeInput,\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(Particles, {\n      className: \"particles\",\n      params: particlesOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(FaceRecognition, {\n      imageUrl: this.state.imageUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["E:\\The Complete web developer zero to mastery\\Smart-Brain\\smart-brain\\src\\App.js"],"names":["React","Component","Navigation","Logo","Rank","ImageLinkForm","Particles","FaceRecognition","Clarifai","particlesOptions","app","App","apiKey","constructor","onChangeInput","event","setState","input","target","value","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","onSubmit","imageUrl","state","models","predict","id","FACE_DETECT_MODEL","version","then","response","err","box","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport Rank from './components/Rank/Rank';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Particles from 'react-particles-js';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Clarifai from 'clarifai';\nimport './App.css';\n\nconst particlesOptions = {\n  \"particles\": {\n      \"number\": {\n          \"value\": 100,\n          \"density\": {\n            \"enable\": false\n        }\n      },\n      \"size\": {\n          \"value\": 4\n      }\n  },\n  \"interactivity\": {\n    \"events\": {\n      \"onhover\": {\n          \"enable\": true,\n          \"mode\": \"bubble repulse\"\n      }\n  },\n  \"modes\": {\n      \"bubble\": {\n          \"size\": 6,\n          \"distance\": 40\n      }\n  }\n  }\n\n}\nconst app = new Clarifai.App({\n  apiKey: 'a5731e15cb6349c2b12b4ddf400a7a2a'\n });\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n    }\n  }\n  onChangeInput = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputImage');\n    const width = image.width;\n    const height = image.height;\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height),\n    }\n  }\n\n  onSubmit = () => {\n    this.setState({ imageUrl: this.state.input});\n    app.models.predict({id:Clarifai.FACE_DETECT_MODEL, version:''},\n    this.state.input)\n     .then(//console.log(\n      function(response) {\n        \n      },\n      function(err) {\n        // there was an error\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n       \n        <Navigation />\n        <Logo />\n        <Rank />\n        <ImageLinkForm \n          onChangeInput={this.onChangeInput} \n          onSubmit={this.onSubmit} \n          />\n        <Particles className='particles'\n      params={particlesOptions} />\n        <FaceRecognition imageUrl = {this.state.imageUrl}/>\n      </div>\n    );\n  }\n\n  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}